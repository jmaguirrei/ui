import stylis from 'stylis';// stylis minify CSS and add vendor prefixesexport function registerStyles(isBrowser) {  return (registerNumber, styles) => {    if (!styles) return [];    const classNamesMapping = Object.keys(styles).map(className => {      const newClassName = `${className}--${registerNumber}`;      return {        className,        newClassName,      };    });    // Construct the new string    const newStyledRules = classNamesMapping.reduce((acum, item) => {      const cssRules = styles[item.className];      const cssRulesStyled = stylis(`.${item.newClassName}`, cssRules);      return `${acum}${cssRulesStyled}`;    }, '');    if (isBrowser) {      console.log("isBrowser", isBrowser);      const node = document.getElementById('component-styles');      node.innerHTML += newStyledRules;    } else {      if (!global.__componentStyles) global.__componentStyles = '';      global.__componentStyles += newStyledRules;      console.log("global.__componentStyles", global.__componentStyles);    }    return classNamesMapping;  };}